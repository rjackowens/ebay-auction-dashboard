version: '3'
services:

  dashboard_ui: # runs dashboard UI
    build:
      context: ./src/ui
    container_name: status-dashboard-ui
    restart: unless-stopped
    environment:
      MONGODB_DATABASE: flaskdb
      MONGODB_USERNAME: root
      MONGODB_PASSWORD: root
      MONGODB_HOSTNAME: mongodb
    depends_on:
      - mongodb
    ports:
      - "8080:8080"

  mongodb: # stores dashboard UI entries
    image: mongo
    container_name: status-dashboard-db
    restart: unless-stopped
    command: mongod --auth
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
      MONGO_INITDB_DATABASE: flaskdb
      MONGODB_DATA_DIR: /data/db
      MONDODB_LOG_DIR: /dev/null
    volumes:
      - mongodbdata:/data/db
    ports:
      - "27017:27017"

  redis: # backend for Celery
    image: redis:alpine
    container_name: status-dashboard-redis
    restart: unless-stopped
    command: redis-server --save "" --appendonly no
    ports:
      - "6379:6379"

  api: # Flask API server
    build:
      context: ./src/api
    container_name: status-dashboard-api
    restart: unless-stopped
    ports:
      - "9000:9000"

  celery_worker: # runs Selenium tests; this can be scaled manually via docker-compose --scale celery_worker=x
    build:
      context: ./src/api
    restart: unless-stopped
    entrypoint: celery -A server worker --pool=prefork --loglevel=INFO

  flower:
    build:
      context: ./src/api
    container_name: flower-ui
    restart: unless-stopped
    entrypoint: celery -A server --broker=redis://redis:6379/0 flower --port=5555
    ports:
      - "5555:5555"

volumes:
  mongodbdata:
    driver: local
